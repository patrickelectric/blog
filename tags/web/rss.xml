<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Patrick Jos√© Pereira</title>
        <link>https://patrickelectric.work</link>
        <description>I am an Electronics Engineer that works with robotic systems, OSS and OSH.</description>
        <generator>Zola</generator>
        <language>en</language>
        <atom:link href="https://patrickelectric.work/tags/web/rss.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Mon, 03 Aug 2020 18:59:39 +0000</lastBuildDate>
        
            <item>
                <title>QML Online - Can be everywhere!</title>
                <pubDate>Mon, 03 Aug 2020 18:59:39 +0000</pubDate>
                <link>https://patrickelectric.work/blog/2020/qmlonline-can-be-everywhere/</link>
                <guid>https://patrickelectric.work/blog/2020/qmlonline-can-be-everywhere/</guid>
                <description>&lt;p&gt;A new feature of QML Online is already available, allows it to run in any site&#x2F;blog with minimal js&#x2F;html code!&lt;&#x2F;p&gt;
&lt;p&gt;Hopefully, our experience with QML examples, tutorials and documentation should change in the near future.&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;Ff you don&#x27;t know what &lt;a href=&quot;https:&#x2F;&#x2F;qmlonline.kde.org&#x2F;&quot;&gt;QML Online&lt;&#x2F;a&gt; is, please take a look in my previous posts:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;..&#x2F;qmlonline-first-version&quot;&gt;QML Online - First version&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;..&#x2F;qmlonline-a-new-home&quot;&gt;QML Online - QML Online - A new home!&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;what-are-we-talking-about&quot;&gt;What are we talking about ?&lt;&#x2F;h1&gt;
&lt;p&gt;QML Online now can be used in any blog or website without much work, like this:&lt;&#x2F;p&gt;
&lt;script type=&quot;text&#x2F;javascript&quot; src=&quot;https:&#x2F;&#x2F;qmlonline.kde.org&#x2F;qtloader.js&quot;&gt;&lt;&#x2F;script&gt;
&lt;script type=&quot;text&#x2F;javascript&quot; src=&quot;https:&#x2F;&#x2F;qmlonline.kde.org&#x2F;qml.js&quot;&gt;&lt;&#x2F;script&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;QtQuick &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2.7
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;QtQuick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.Controls &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2.3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;QtQuick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.Layouts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.12
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Rectangle &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
    color: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;#179AF3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;anchors&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.fill: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;parent
     ColumnLayout&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;anchors&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.bottom: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;parent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.bottom
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;anchors&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.right: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;parent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.right
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CheckBox &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
            checked: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;text: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Check this!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
        }
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CheckBox &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
            text: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Or this!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
        }
    }
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Text &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
        text: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;KDE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;font&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.pixelSize: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;80
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;font&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.bold: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;color: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;#82CB38&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;anchors&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.centerIn: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;parent
        RotationAnimator on rotation &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
            running: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;loops: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Animation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.Infinite
            from: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;to: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;360
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;duration: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1500
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
    }
}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;!--
&lt;script type=&quot;text&#x2F;javascript&quot; src=&quot;https:&#x2F;&#x2F;qmlonline.kde.org&#x2F;qtloader.js&quot;&gt;&lt;&#x2F;script&gt;
&lt;script type=&quot;text&#x2F;javascript&quot; src=&quot;https:&#x2F;&#x2F;qmlonline.kde.org&#x2F;qml.js&quot;&gt;&lt;&#x2F;script&gt;
--&gt;
&lt;div id=&quot;qmlonline&quot;&gt;&lt;&#x2F;div&gt;
&lt;script type=&#x27;text&#x2F;javascript&#x27;&gt;
    const qmlonline = new QmlOnline(&quot;qmlonline&quot;)
    qmlonline.registerCall({
        qmlMessage: function(msg) {
            console.log(`qml message: ${msg}`)
        },
        qmlError: function(data) {
            console.log(`qml message: ${JSON.stringify(msg)}`)
        },
        posInit: function() {
            qmlonline.setCode(`import QtQuick 2.7
import QtQuick.Controls 2.3
import QtQuick.Layouts 1.12
Rectangle {
    color: &quot;#179AF3&quot;
    anchors.fill: parent
     ColumnLayout{
        anchors.bottom: parent.bottom
        anchors.right: parent.right
        CheckBox {
            checked: true
            text: &quot;Check this!&quot;
        }
        CheckBox {
            text: &quot;Or this!&quot;
        }
    }
    Text {
        text: &quot;KDE&quot;
        font.pixelSize: 80
        font.bold: true
        color: &quot;#82CB38&quot;
        anchors.centerIn: parent
        RotationAnimator on rotation {
            running: true
            loops: Animation.Infinite
            from: 0
            to: 360
            duration: 1500
        }
    }
}`)
        },
    })
    qmlonline.init()
&lt;&#x2F;script&gt;
&lt;p&gt;And how can this new feature be used ?&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s quite simple, check this minimal HTML example:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;
&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;
    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;Qml Online minimal example&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;
&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;
&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;
    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;script &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;text&#x2F;javascript&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;src&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;qmlonline.kde.org&#x2F;qtloader.js&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;script&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;
    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;script &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;text&#x2F;javascript&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;src&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;qmlonline.kde.org&#x2F;qml.js&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;script&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;

    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;qmlonline&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;

    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;script &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;text&#x2F;qml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&amp;gt;
    import QtQuick 2.7
    import QtQuick.Controls 2.3
    Rectangle {
        color: &amp;quot;#179AF3&amp;quot;
        anchors.fill: parent
        Text {
            text: &amp;quot;KDE&amp;quot;
            font.pixelSize: 80
            font.bold: true
            color: &amp;quot;#82CB38&amp;quot;
            anchors.centerIn: parent
            RotationAnimator on rotation {
                running: true
                loops: Animation.Infinite
                from: 0
                to: 360
                duration: 1500
            }
        }
    }
    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;script&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;

    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;script &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;text&#x2F;javascript&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&amp;gt;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;qml &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;QmlOnline&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;qmlonline&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;)
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;qml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;registerCall&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;({
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;qmlMessage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(msg) {
                console.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(`&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;qml message: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;msg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}`)
            },
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;qmlError&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(data) {
                console.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(`&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;qml error: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;JSON&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stringify&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;)}`)
            },
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;posInit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;() {
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;qml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setCode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Array&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.prototype.slice.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apply&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(document.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;getElementsByTagName&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;script&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;)).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;find&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(e &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.type == &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;text&#x2F;qml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;).text)
            },
        })
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;qml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;init&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;()
    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;script&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;
&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;
&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As you can see, there is three steps, include both &lt;code&gt;qtloader.js&lt;&#x2F;code&gt; and &lt;code&gt;qml.js&lt;&#x2F;code&gt;, add a &lt;code&gt;div&lt;&#x2F;code&gt; DOM and create a &lt;code&gt;QmlOnline&lt;&#x2F;code&gt; object.
Since I&#x27;m not a web expert, probably there is a better way to organize this approach for the user and bugs may exist.
Be free to create &lt;a href=&quot;https:&#x2F;&#x2F;invent.kde.org&#x2F;webapps&#x2F;qmlonline&#x2F;-&#x2F;merge_requests&quot;&gt;Merge Requests&lt;&#x2F;a&gt;, or get in touch with &lt;a href=&quot;https:&#x2F;&#x2F;invent.kde.org&#x2F;webapps&#x2F;qmlonline&#x2F;-&#x2F;issues&#x2F;new&quot;&gt;feature requests and issues&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;what-is-next&quot;&gt;What is next ?&lt;&#x2F;h1&gt;
&lt;p&gt;From my planned objectives, sharing QML Online as library to be available for any website was one of the final points, the only one that&#x27;s still missing is the Kirigami support, that&#x27;s still in progress and hopefully will be finished until the end of the year (if everything goes fine).&lt;&#x2F;p&gt;
&lt;p&gt;There is also a small bug, where &lt;a href=&quot;https:&#x2F;&#x2F;invent.kde.org&#x2F;webapps&#x2F;qmlonline&#x2F;-&#x2F;issues&#x2F;3&quot;&gt;it&#x27;s not possible to use multiple QML Online instances on the same webpage&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>QML Online - A new home!</title>
                <pubDate>Tue, 16 Jun 2020 13:55:39 +0000</pubDate>
                <link>https://patrickelectric.work/blog/2020/qmlonline-a-new-home/</link>
                <guid>https://patrickelectric.work/blog/2020/qmlonline-a-new-home/</guid>
                <description>&lt;p&gt;A quick update, QML Online now has a new home!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Website: &lt;a href=&quot;http:&#x2F;&#x2F;qmlonline.kde.org&#x2F;&quot;&gt;qmlonline.kde.org&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Repository: &lt;a href=&quot;https:&#x2F;&#x2F;invent.kde.org&#x2F;webapps&#x2F;qmlonline&quot;&gt;invent.kde.org&#x2F;webapps&#x2F;qmlonline&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;&lt;h1 id=&quot;what-is-next&quot;&gt;What is next&lt;&#x2F;h1&gt;
&lt;p&gt;Now that the project is under KDE organization, I&#x27;ll start with the planned new capabilities, such as the Kirigami support and the html element to help with online documentation of qml snippets.&lt;&#x2F;p&gt;
&lt;p&gt;And to finish this quick update, be invited to help with the project and send &lt;a href=&quot;https:&#x2F;&#x2F;invent.kde.org&#x2F;webapps&#x2F;qmlonline&#x2F;-&#x2F;merge_requests&quot;&gt;Merge Requests&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;invent.kde.org&#x2F;webapps&#x2F;qmlonline&#x2F;-&#x2F;issues&#x2F;new&quot;&gt;feature requests and opinions&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;konqi.png&quot; alt=&quot;image&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>QML Online - First stable version!</title>
                <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
                <link>https://patrickelectric.work/blog/2020/qmlonline-first-version/</link>
                <guid>https://patrickelectric.work/blog/2020/qmlonline-first-version/</guid>
                <description>&lt;p&gt;Finally, after working since October and learning a bunch about &lt;a href=&quot;https:&#x2F;&#x2F;webassembly.org&#x2F;&quot;&gt;WebAssembly&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Cascading_Style_Sheets&quot;&gt;CSS&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;wikipedia.org&#x2F;wiki&#x2F;HTML&quot;&gt;HTML&lt;&#x2F;a&gt; (sad, right ?) and &lt;a href=&quot;https:&#x2F;&#x2F;emscripten.org&#x2F;&quot;&gt;emscripten&lt;&#x2F;a&gt;, I can happily announce a stable version of &lt;a href=&quot;https:&#x2F;&#x2F;patrickelectric.work&#x2F;qmlonline&#x2F;&quot;&gt;qmlonline&lt;&#x2F;a&gt;!
In this post, I&#x27;m going to show the idea behind the project and some code that may help you with your future adventures.&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;&lt;h1 id=&quot;the-initial-steps&quot;&gt;The initial steps&lt;&#x2F;h1&gt;
&lt;p&gt;Everything starts with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;patrickelectric&#x2F;qhot&quot;&gt;QHot&lt;&#x2F;a&gt;, that I describe as &lt;em&gt;&amp;quot;Hot reload for nested QML files&amp;quot;&lt;&#x2F;em&gt;, a useful tool for anyone that likes to prototype UI elements or ideas with a real-time feedback of what you are typing in QML. I noticed that compiling the project or recalling qml&#x2F;qmlscene tools just to test and check my ideas was pretty annoying and time-consuming, the desire to have something like &lt;a href=&quot;https:&#x2F;&#x2F;godbolt.org&#x2F;&quot;&gt;godbolt&lt;&#x2F;a&gt; or &lt;a href=&quot;http:&#x2F;&#x2F;quick-bench.com&#x2F;&quot;&gt;quick-bench&lt;&#x2F;a&gt; started growing. My objective was something that was closer to these tools but for QML development, and that is how &lt;strong&gt;QHot&lt;&#x2F;strong&gt; was born.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;patrickelectric&#x2F;qhot&#x2F;master&#x2F;doc&#x2F;example.gif&quot; alt=&quot;image&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;With QHot working, I started to add some small features in the command line interface to have mostly of the functionalities that exist in qml&#x2F;qmlscene, at least the most important ones for my use.&lt;&#x2F;p&gt;
&lt;p&gt;After some days, the idea of &lt;strong&gt;QHot&lt;&#x2F;strong&gt; working in the browser via webassembly started to grow, and with that, the initial work that would result in &lt;strong&gt;qmlonline&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;journey&quot;&gt;Journey&lt;&#x2F;h1&gt;
&lt;p&gt;After some tweaks around &lt;strong&gt;QHot&lt;&#x2F;strong&gt;, it was possible to have the first version of qmlonline working.
The initial version was entirely made with QML, without HTML components, the editor was a &lt;a href=&quot;https:&#x2F;&#x2F;doc.qt.io&#x2F;qt-5&#x2F;qml-qtquick-textedit.html&quot;&gt;TextEdit&lt;&#x2F;a&gt; with a fancy &lt;a href=&quot;https:&#x2F;&#x2F;doc.qt.io&#x2F;qt-5&#x2F;qsyntaxhighlighter.html&quot;&gt;QSyntaxHighlighter&lt;&#x2F;a&gt;. The text inside the &lt;strong&gt;TextEdit&lt;&#x2F;strong&gt; was used to create a new component with &lt;a href=&quot;https:&#x2F;&#x2F;doc.qt.io&#x2F;qt-5&#x2F;qml-qtqml-qt.html#createQmlObject-method&quot;&gt;Qt.createQmlObject&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;qmlonline-first-version&#x2F;full-qml.png&quot; alt=&quot;image&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;With the initial version working, I started to move the interface to HTML, this was necessary to have a better shortcut handling system and a better integration with the browser for user inputs.&lt;&#x2F;p&gt;
&lt;p&gt;The code evolved from a simple &lt;strong&gt;TextEdit&lt;&#x2F;strong&gt; with some controls to a full HTML interface, for that, functions had to be imlpemented to help with the webassembly code to be accessible from the webpage.&lt;&#x2F;p&gt;
&lt;p&gt;From the beginning, I had an initial singleton class called &lt;strong&gt;Util&lt;&#x2F;strong&gt; that was conceived to be some kind of helper class for the QML code. This same class was used to create the interface between the JS and the webassembly via emscripten.&lt;&#x2F;p&gt;
&lt;p&gt;In general, two functions were created, &lt;code&gt;std::string Util::codeEMS() const&lt;&#x2F;code&gt; that returns the code that is being used in the QML to render the user component, and &lt;code&gt;void Util::setCodeEMS(const std::string&amp;amp; code)&lt;&#x2F;code&gt; that sets the code that should be rendered.
To access both functions and the class, &lt;a href=&quot;https:&#x2F;&#x2F;emscripten.org&#x2F;docs&#x2F;porting&#x2F;connecting_cpp_and_javascript&#x2F;embind.html&quot;&gt;EMSCRIPTEN_BINDINGS&lt;&#x2F;a&gt; were used.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;emscripten&#x2F;bind.h&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;EMSCRIPTEN_BINDINGS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(util) {
    emscripten::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;class_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;lt;Util&amp;gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;)
        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;code&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, &amp;amp;Util::codeEMS)
        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;setCode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, &amp;amp;Util::setCodeEMS);
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;emscripten::function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, &amp;amp;Util::self, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;emscripten::allow_raw_pointers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;());
}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;That&#x27;s probably the most important piece of code to do the integration between the C++ and JS.&lt;&#x2F;p&gt;
&lt;p&gt;And for the QML, well, you can check all QML here:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;import Util &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.0

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ApplicationWindow &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
    id: window
    title: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;qmlonline&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;
    visible: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Connections &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
        target: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Util
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;onCodeChanged: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;userParentItem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;create&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.code)
    }

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Item &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
        id: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;userParentItem
        anchors&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.fill: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;parent
        property &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;userItem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;null

        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;create&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(textComponent) {
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;userItem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;) {
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;userItem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;destroy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;()
            }
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;userItem &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Qt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;createQmlObject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;textComponent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;userParentItem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;userItem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;)
        }

        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Component&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.onCompleted: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;userParentItem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;create&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Util&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.code)
    }
}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Oh, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;patrickelectric&#x2F;qmlonline&#x2F;blob&#x2F;71342f68f5f99dcf9c2b69051b63ea2e83010ca8&#x2F;src&#x2F;util.cpp&quot;&gt;you can check the source code here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;To build the project, I changed my approach a couple of times.
For the first test version, I did my development based in the official documents for &lt;a href=&quot;https:&#x2F;&#x2F;doc.qt.io&#x2F;qt-5&#x2F;wasm.html&quot;&gt;Qt webassembly&lt;&#x2F;a&gt;. But, compiling Qt for each machine that I use was a bit of a pain, so I started to use a docker available from this &lt;a href=&quot;https:&#x2F;&#x2F;www.qt.io&#x2F;blog&#x2F;2019&#x2F;03&#x2F;05&#x2F;using-docker-test-qt-webassembly&quot;&gt;Qt blog post&lt;&#x2F;a&gt;.
And everything was great until newer versions of Qt and emscript were released, and after some time searching, I found this great &lt;a href=&quot;https:&#x2F;&#x2F;hub.docker.com&#x2F;r&#x2F;madmanfred&#x2F;qt-webassembly&#x2F;tags&quot;&gt;repository&#x2F;developer&lt;&#x2F;a&gt; with a couple of Qt containers for webassembly and different emscript versions.&lt;&#x2F;p&gt;
&lt;p&gt;And after building the project, you can always test it with &lt;code&gt;python3 -m http.server&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;where-i-am&quot;&gt;Where I am&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;qmlonline-first-version&#x2F;final-version.gif&quot; alt=&quot;image&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;As you can see from the gif, the basic functionality is still the same from the original version, that was full QML.&lt;&#x2F;p&gt;
&lt;p&gt;The user experience has improved, the interface is now much smoother compared to the full QML version. Qt webassembly is great, but from my tests, the performance was not good and the browser&#x2F;system integration needs improvement to have the same functionality as a normal webpage or application.&lt;&#x2F;p&gt;
&lt;p&gt;Again, remember to check &lt;a href=&quot;https:&#x2F;&#x2F;patrickelectric.work&#x2F;qmlonline&#x2F;&quot;&gt;qmlonline&lt;&#x2F;a&gt; in your browser :)&lt;&#x2F;p&gt;
&lt;p&gt;If you have good QML examples and wish to add those, contact me via email, or create an issue in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;patrickelectric&#x2F;qmlonline&quot;&gt;repository&lt;&#x2F;a&gt;, or send a PR, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;patrickelectric&#x2F;qmlonline&#x2F;tree&#x2F;gh-pages&#x2F;qml&#x2F;examples&quot;&gt;it&#x27;s really simple&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;what-i-m-working-on&quot;&gt;What I&#x27;m working on&lt;&#x2F;h1&gt;
&lt;p&gt;There is a couple of things that I&#x27;m still working to improve qmlonline:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Kirigami support&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ajaxorg&#x2F;ace&#x2F;pulls?q=author%3Apatrickelectric+&quot;&gt;Better ace editor integration with QML&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;A qmlonline element to integrate with websites like Qt&#x2F;KDE website documents&lt;&#x2F;li&gt;
&lt;li&gt;Start to move qmlonline to be a KDE project&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Any feature request will be much welcome!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;thanks&quot;&gt;Thanks!&lt;&#x2F;h1&gt;
&lt;p&gt;Special thanks to Arthur Turrini, everybody in &lt;a href=&quot;https:&#x2F;&#x2F;t.me&#x2F;qtbrasil&quot;&gt;Qt Brasil telegram channel&lt;&#x2F;a&gt; and the KDE members, the project would not be possible without the help and inspiration provided by the developers.&lt;&#x2F;p&gt;
</description>
            </item>
        
    </channel>
</rss>